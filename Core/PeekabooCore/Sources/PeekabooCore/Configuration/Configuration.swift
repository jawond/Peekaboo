import Foundation

/// Root configuration structure for Peekaboo settings.
///
/// This structure represents the complete configuration file format (JSONC) that can be
/// stored at `~/.peekaboo/config.json`. All properties are optional, allowing
/// partial configuration with fallback to environment variables or defaults.
public struct Configuration: Codable {
    public var aiProviders: AIProviderConfig?
    public var defaults: DefaultsConfig?
    public var logging: LoggingConfig?
    
    public init(
        aiProviders: AIProviderConfig? = nil,
        defaults: DefaultsConfig? = nil,
        logging: LoggingConfig? = nil
    ) {
        self.aiProviders = aiProviders
        self.defaults = defaults
        self.logging = logging
    }

    /// Configuration for AI vision providers.
    ///
    /// Defines which AI providers to use for image analysis, their API keys,
    /// and connection settings. Supports both cloud-based (OpenAI) and local (Ollama) providers.
    public struct AIProviderConfig: Codable {
        public var providers: String?
        public var openaiApiKey: String?
        public var ollamaBaseUrl: String?
        
        public init(
            providers: String? = nil,
            openaiApiKey: String? = nil,
            ollamaBaseUrl: String? = nil
        ) {
            self.providers = providers
            self.openaiApiKey = openaiApiKey
            self.ollamaBaseUrl = ollamaBaseUrl
        }
    }

    /// Default settings for screenshot capture operations.
    ///
    /// These settings apply when no command-line arguments are provided,
    /// allowing users to customize their preferred capture behavior.
    public struct DefaultsConfig: Codable {
        public var savePath: String?
        public var imageFormat: String?
        public var captureMode: String?
        public var captureFocus: String?
        
        public init(
            savePath: String? = nil,
            imageFormat: String? = nil,
            captureMode: String? = nil,
            captureFocus: String? = nil
        ) {
            self.savePath = savePath
            self.imageFormat = imageFormat
            self.captureMode = captureMode
            self.captureFocus = captureFocus
        }
    }

    /// Logging configuration for debugging and troubleshooting.
    ///
    /// Controls the verbosity and location of log files generated by Peekaboo
    /// during operation.
    public struct LoggingConfig: Codable {
        public var level: String?
        public var path: String?
        
        public init(level: String? = nil, path: String? = nil) {
            self.level = level
            self.path = path
        }
    }
}